---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: prephemeralenvcontrollers.prcontroller.controllers.ephemeralenv.io
spec:
  group: prcontroller.controllers.ephemeralenv.io
  names:
    kind: PREphemeralEnvController
    listKind: PREphemeralEnvControllerList
    plural: prephemeralenvcontrollers
    singular: prephemeralenvcontroller
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The status of the resource
      jsonPath: .status.message
      name: Status
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PREphemeralEnvController is the Schema for the prephemeralenvcontrollers
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PREphemeralEnvControllerSpec defines the desired state of
              PREphemeralEnvController
            properties:
              envCreationHelmRepo:
                description: Helm Repository for Infrastructure manifests
                properties:
                  chartVersion:
                    default: 0.1.0
                    description: The Chart version in semver format
                    type: string
                  destinationNamespace:
                    default: pr-helm-releases
                    description: The Kubernetes Namespace where the manifests will
                      be deployed
                    type: string
                  fluxSourceRepoName:
                    description: Name of the Flux Source Repository containing the
                      Helm Chart
                    type: string
                  helmChartPath:
                    description: The folder name in the Helm Repository containing
                      the manifest templates
                    type: string
                required:
                - chartVersion
                - destinationNamespace
                - fluxSourceRepoName
                - helmChartPath
                type: object
              envHealthCheckURLTemplate:
                description: Ephemeral Environment Health Check URL Template to be
                  used to check the health of the ephemeral environment. If specified,
                  the controller will check the health of the ephemeral environment
                  and Update the Github PR status when environment is ready. <<PR_NUMBER>>
                  will be replaced with the PR number <<PR_HEAD_SHA>> will be replaced
                  with the PR head SHA
                type: string
              githubPRRepository:
                description: The Github Repository, PRs against which will trigger
                  the creation of the ephemeral environment
                properties:
                  repo:
                    description: Repo specifies the name of the githuh repository.
                    type: string
                  tokenSecretRef:
                    description: SecretRef specifies the Token Secret containing authentication
                      credentials for the Github Repository.
                    properties:
                      key:
                        type: string
                      name:
                        description: Name of the referent.
                        type: string
                      namespace:
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  user:
                    description: User is the GitHub user name
                    type: string
                required:
                - user
                type: object
              interval:
                default: 60s
                description: Interval at which to check the GitRepository for PR updates.
                type: string
            required:
            - interval
            type: object
          status:
            description: PREphemeralEnvControllerStatus defines the observed state
              of PREphemeralEnvController
            properties:
              conditions:
                description: Conditions holds the conditions for the GitRepository.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              message:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
